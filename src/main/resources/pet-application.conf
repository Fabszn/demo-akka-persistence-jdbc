# Copyright 2016 Dennis Vriend
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "general"

akka {
  loglevel = debug

  actor {
    serialization-bindings {
      "com.github.dnvriend.domain.PetDomain$Pet" = kryo
    }
  }
}

jdbc-journal {
  slick {
    driver = "slick.driver.PostgresDriver$"
    db {
      url = "jdbc:postgresql://boot2docker:5432/docker"
      user = "docker"
      password = "docker"
      driver = "org.postgresql.Driver"

      // hikariCP
      numThreads = 4 // number of cores
      maxConnections = 2 // 2 * numThreads + 1 (if running on an SSD)
      minConnections = 1  // same as numThreads

      connectionTestQuery = SELECT 1 // postgres doesnt support connection timeout
    }
  }
}

# the akka-persistence-snapshot-store in use
jdbc-snapshot-store {
  slick {
    driver = "slick.driver.PostgresDriver$"
    db {
      url = "jdbc:postgresql://boot2docker:5432/docker"
      user = "docker"
      password = "docker"
      driver = "org.postgresql.Driver"

      // hikariCP
      numThreads = 4 // number of cores
      maxConnections = 2 // 2 * numThreads + 1 (if running on an SSD)
      minConnections = 1  // same as numThreads

      connectionTestQuery = SELECT 1 // postgres doesnt support connection timeout
    }
  }
}

# the akka-persistence-query provider in use
jdbc-read-journal {
  # New events are retrieved (polled) with this interval.
  refresh-interval = "1s"

  # How many events to fetch in one query (replay) and keep buffered until they
  # are delivered downstreams.
  max-buffer-size = "500"

  slick {
    driver = "slick.driver.PostgresDriver$"
    db {
      url = "jdbc:postgresql://boot2docker:5432/docker"
      user = "docker"
      password = "docker"
      driver = "org.postgresql.Driver"

      // hikariCP
      numThreads = 1 // number of cores
      maxConnections = 1 // 2 * numThreads + 1 (if running on an SSD)
      minConnections = 1  // same as numThreads

      connectionTestQuery = SELECT 1 // postgres doesnt support connection timeout
    }
  }
}